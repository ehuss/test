language: shell

env:
  global:
    - CI_JOB_NAME=$TRAVIS_JOB_NAME

matrix:
  include:
    # Images used in testing PR and try-build should be run first.
    - env: IMAGE=x86_64-gnu-llvm-6.0 RUST_BACKTRACE=1
      name: x86_64-gnu-llvm-6.0

    - env: IMAGE=dist-x86_64-linux DEPLOY=1
      name: dist-x86_64-linux

    # "alternate" deployments, these are "nightlies" but have LLVM assertions
    # turned on, they're deployed to a different location primarily for
    # additional testing.
    - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1
      name: dist-x86_64-linux-alt

    - env: >
        RUST_CHECK_TARGET=dist
        RUST_CONFIGURE_ARGS="--enable-extended --enable-profiler --enable-lldb --set rust.jemalloc"
        SRC=.
        DEPLOY_ALT=1
        RUSTC_RETRY_LINKER_ON_SEGFAULT=1
        MACOSX_DEPLOYMENT_TARGET=10.7
        NO_LLVM_ASSERTIONS=1
        NO_DEBUG_ASSERTIONS=1
      os: osx
      name: dist-x86_64-apple-alt

    # macOS builders. These are placed near the beginning because they are very
    # slow to run.

    # OSX builders running tests, these run the full test suite.
    # NO_DEBUG_ASSERTIONS=1 to make them go faster, but also do have some
    # runners that run `//ignore-debug` tests.
    #
    # Note that the compiler is compiled to target 10.8 here because the Xcode
    # version that we're using, 8.2, cannot compile LLVM for OSX 10.7.
    - env: >
        RUST_CHECK_TARGET=check
        RUST_CONFIGURE_ARGS="--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc"
        SRC=.
        RUSTC_RETRY_LINKER_ON_SEGFAULT=1
        MACOSX_DEPLOYMENT_TARGET=10.8
        MACOSX_STD_DEPLOYMENT_TARGET=10.7
        NO_LLVM_ASSERTIONS=1
        NO_DEBUG_ASSERTIONS=1
      os: osx
      name: x86_64-apple

    - env: >
        RUST_CHECK_TARGET=check
        RUST_CONFIGURE_ARGS="--build=i686-apple-darwin --set rust.jemalloc"
        SRC=.
        RUSTC_RETRY_LINKER_ON_SEGFAULT=1
        MACOSX_DEPLOYMENT_TARGET=10.8
        MACOSX_STD_DEPLOYMENT_TARGET=10.7
        NO_LLVM_ASSERTIONS=1
        NO_DEBUG_ASSERTIONS=1
      os: osx
      name: i686-apple

    # OSX builders producing releases. These do not run the full test suite and
    # just produce a bunch of artifacts.
    #
    # Note that these are running in the `xcode7` image instead of the
    # `xcode8.2` image as above. That's because we want to build releases for
    # OSX 10.7 and `xcode7` is the latest Xcode able to compile LLVM for 10.7.
    - env: >
        RUST_CHECK_TARGET=dist
        RUST_CONFIGURE_ARGS="--build=i686-apple-darwin --enable-full-tools --enable-profiler --enable-lldb --set rust.jemalloc"
        SRC=.
        DEPLOY=1
        RUSTC_RETRY_LINKER_ON_SEGFAULT=1
        MACOSX_DEPLOYMENT_TARGET=10.7
        NO_LLVM_ASSERTIONS=1
        NO_DEBUG_ASSERTIONS=1
        DIST_REQUIRE_ALL_TOOLS=1
      os: osx
      name: dist-i686-apple

    - env: >
        RUST_CHECK_TARGET=dist
        RUST_CONFIGURE_ARGS="--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --enable-lldb --set rust.jemalloc"
        SRC=.
        DEPLOY=1
        RUSTC_RETRY_LINKER_ON_SEGFAULT=1
        MACOSX_DEPLOYMENT_TARGET=10.7
        NO_LLVM_ASSERTIONS=1
        NO_DEBUG_ASSERTIONS=1
        DIST_REQUIRE_ALL_TOOLS=1
      os: osx
      name: dist-x86_64-apple

    # Linux builders, remaining docker images
    - env: IMAGE=arm-android
      name: arm-android
    - env: IMAGE=armhf-gnu
      name: armhf-gnu
    - env: IMAGE=dist-various-1 DEPLOY=1
      name: dist-various-1
    - env: IMAGE=dist-various-2 DEPLOY=1
      name: dist-various-2
    - env: IMAGE=dist-aarch64-linux DEPLOY=1
      name: dist-aarch64-linux
    - env: IMAGE=dist-android DEPLOY=1
      name: dist-android
    - env: IMAGE=dist-arm-linux DEPLOY=1
      name: dist-arm-linux
    - env: IMAGE=dist-armhf-linux DEPLOY=1
      name: dist-armhf-linux
    - env: IMAGE=dist-armv7-linux DEPLOY=1
      name: dist-armv7-linux
    - env: IMAGE=dist-i586-gnu-i586-i686-musl DEPLOY=1
      name: dist-i586-gnu-i586-i686-musl
    - env: IMAGE=dist-i686-freebsd DEPLOY=1
      name: dist-i686-freebsd
    - env: IMAGE=dist-i686-linux DEPLOY=1
      name: dist-i686-linux
    - env: IMAGE=dist-mips-linux DEPLOY=1
      name: dist-mips-linux
    - env: IMAGE=dist-mips64-linux DEPLOY=1
      name: dist-mips64-linux
    - env: IMAGE=dist-mips64el-linux DEPLOY=1
      name: dist-mips64el-linux
    - env: IMAGE=dist-mipsel-linux DEPLOY=1
      name: dist-mipsel-linux
    - env: IMAGE=dist-powerpc-linux DEPLOY=1
      name: dist-powerpc-linux
    - env: IMAGE=dist-powerpc64-linux DEPLOY=1
      name: dist-powerpc64-linux
    - env: IMAGE=dist-powerpc64le-linux DEPLOY=1
      name: dist-powerpc64le-linux
    - env: IMAGE=dist-s390x-linux DEPLOY=1
      name: dist-s390x-linux
    - env: IMAGE=dist-x86_64-freebsd DEPLOY=1
      name: dist-x86_64-freebsd
    - env: IMAGE=dist-x86_64-musl DEPLOY=1
      name: dist-x86_64-musl
    - env: IMAGE=dist-x86_64-netbsd DEPLOY=1
      name: dist-x86_64-netbsd
    - env: IMAGE=asmjs
      name: asmjs
    - env: IMAGE=i686-gnu
      name: i686-gnu
    - env: IMAGE=i686-gnu-nopt
      name: i686-gnu-nopt
    - env: IMAGE=test-various
      name: test-various
    - env: IMAGE=x86_64-gnu
      name: x86_64-gnu
    - env: IMAGE=x86_64-gnu-full-bootstrap
      name: x86_64-gnu-full-bootstrap
    - env: IMAGE=x86_64-gnu-aux
      name: x86_64-gnu-aux
    - env: IMAGE=x86_64-gnu-tools
      name: x86_64-gnu-tools
    - env: IMAGE=x86_64-gnu-debug
      name: x86_64-gnu-debug
    - env: IMAGE=x86_64-gnu-nopt
      name: x86_64-gnu-nopt
    - env: IMAGE=x86_64-gnu-distcheck
      name: x86_64-gnu-distcheck
    - env: IMAGE=mingw-check
      name: mingw-check

script:
  - env
